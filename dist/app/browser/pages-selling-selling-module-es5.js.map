{"version":3,"sources":["webpack:///src/app/pages/selling/selling.module.ts","webpack:///src/app/pages/selling/selling.page.ts","webpack:///src/app/pages/selling/selling.page.html","webpack:///src/app/pages/selling/selling-routing.module.ts","webpack:///src/app/Services/account/item-service.ts"],"names":["SellingPageModule","SellingPage","itemService","router","showAgeFilter","getItems","subscribe","data","console","log","JSON","stringify","items","navigateByUrl","searchList","routes","path","component","loadChildren","then","m","SellingItemPageModule","SellingPageRoutingModule","forChild","ItemService","http","get"],"mappings":"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","file":"pages-selling-selling-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SellingPageRoutingModule } from './selling-routing.module';\n\nimport { SellingPage } from './selling.page';\nimport { ItemService } from '../../Services/account/item-service';\nimport { ComponentsModule } from '../../components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SellingPageRoutingModule,\n    ComponentsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [SellingPage],\n  providers: [ItemService],\n})\nexport class SellingPageModule {}\n","import { JsonpClientBackend } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { observable } from 'rxjs';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { ItemService } from '../../Services/account/item-service';\n\n@Component({\n  selector: 'app-selling',\n  templateUrl: './selling.page.html',\n  styleUrls: ['./selling.page.scss','./selling.page.ios.scss'],\n})\nexport class SellingPage implements OnInit {\n\n  items: Observable<any>;\n  rangeForm: FormGroup;\n  searchQuery: string;\n  showAgeFilter = false;\n  constructor(\n    private itemService : ItemService,\n    private router :Router\n  ) { }\n\n  ngOnInit() {\n\n    this.itemService.getItems().subscribe((data) => {\n      console.log(JSON.stringify(data))\n      this.items = data;\n  \n    })\n  }\n\n  searchList(){\n\n  }\n\n  close(){\n    this.router.navigateByUrl(\"/home\")\n  }\n\n}\n","<ion-header [translucent]=\"true\" class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"/redmarket/items\" mode=\"md\">\n      </ion-back-button>\n    </ion-buttons>\n    <ion-title mode=\"ios\">Selling</ion-title>\n  </ion-toolbar>\n\n  <ion-toolbar class=\"filters-toolbar\">\n    <ion-row class=\"searchbar-row\" align-items-center>\n      <ion-col>\n        <ion-searchbar class=\"items-searchbar\" animated [(ngModel)]=\"searchQuery\" (ionChange)=\"searchList()\" placeholder=\"Filter by name...\"></ion-searchbar>\n      </ion-col>\n      <ion-col class=\"call-to-action-col\">\n        <ion-button fill=\"clear\" color=\"secondary\" class=\"filters-btn\" (click)=\"showAgeFilter = !showAgeFilter\">\n          <ion-icon slot=\"icon-only\" name=\"options\"></ion-icon>\n        </ion-button>\n      </ion-col>\n    </ion-row>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"firebase-listing-content\">\n  <ion-list class=\"items-list\" lines=\"full\" [routerLink]=\"['item']\">\n    <ion-item class=\"list-item\" *ngFor=\"let item of items \" button mode=\"ios\">\n      <ion-row class=\"user-row\">\n        <ion-col size=\"3\" class=\"user-image-wrapper\">\n          <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n            <app-image-shell class=\"user-image\" animation=\"spinner\" [src]=\"item.image\" [alt]=\"'item image'\"></app-image-shell>\n          </app-aspect-ratio>\n        </ion-col>\n        <ion-col class=\"user-data-wrapper\">\n          <div class=\"user-info\">\n            <h3 class=\"user-name\">\n              <app-text-shell animation=\"bouncing\" [data]=\"item?.name\"></app-text-shell>\n            </h3>\n            <h5 class=\"user-age\">\n              <app-text-shell animation=\"bouncing\" [data]=\"item?.price\"></app-text-shell>\n            </h5>\n          </div>\n        </ion-col>\n      </ion-row>\n    </ion-item>\n  </ion-list>\n  <h3 *ngIf=\"!items\" class=\"empty-list-message\">\n    No users found for the selected filters.\n  </h3>\n  <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n    <ion-fab-button>\n      <ion-icon name=\"camera-outline\"></ion-icon>\n    </ion-fab-button>\n  </ion-fab>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SellingPage } from './selling.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SellingPage\n  },\n  {\n    path: 'item',\n    loadChildren: () => import('../selling-item/selling-item.module').then( m => m.SellingItemPageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SellingPageRoutingModule {}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable, PLATFORM_ID } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\n@Injectable()\nexport class ItemService {\n \nconstructor(\n  private http: HttpClient\n) { }\n\ngetItems():Observable<any> {\n    return this.http.get<any>('./assets/sample-data/item/items.json');\n        }\n     \n        getSellerItems():Observable<any> {\n          return this.http.get<any>('./assets/sample-data/item/items.json');\n              }\n        getOneItem():Observable<any> {\n            return this.http.get<any>('./assets/sample-data/item/single-item.json');\n                }\n\n}"]}