'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var core$1 = require('@angular/core');
var core = require('@ionic-native/core');

exports.OutputType = void 0;
(function (OutputType) {
    OutputType[OutputType["FILE_URL"] = 0] = "FILE_URL";
    OutputType[OutputType["DATA_URL"] = 1] = "DATA_URL";
})(exports.OutputType || (exports.OutputType = {}));
var ɵngcc0 = require('@angular/core');
var ImagePicker = /** @class */ (function (_super) {
    tslib.__extends(ImagePicker, _super);
    function ImagePicker() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ImagePicker.prototype.getPictures = function (options) { return core.cordova(this, "getPictures", { "callbackOrder": "reverse" }, arguments); };
    ImagePicker.prototype.hasReadPermission = function () { return core.cordova(this, "hasReadPermission", { "platforms": ["Android"] }, arguments); };
    ImagePicker.prototype.requestReadPermission = function () { return core.cordova(this, "requestReadPermission", { "platforms": ["Android"] }, arguments); };
    ImagePicker.pluginName = "ImagePicker";
    ImagePicker.plugin = "cordova-plugin-telerik-imagepicker";
    ImagePicker.pluginRef = "window.imagePicker";
    ImagePicker.repo = "https://github.com/Telerik-Verified-Plugins/ImagePicker";
    ImagePicker.install = "ionic cordova plugin add cordova-plugin-telerik-imagepicker --variable PHOTO_LIBRARY_USAGE_DESCRIPTION=\"your usage message\"";
    ImagePicker.installVariables = ["PHOTO_LIBRARY_USAGE_DESCRIPTION"];
    ImagePicker.platforms = ["Android", "iOS"];
ImagePicker.ɵfac = function ImagePicker_Factory(t) { return ɵImagePicker_BaseFactory(t || ImagePicker); };
ImagePicker.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ImagePicker, factory: function (t) { return ImagePicker.ɵfac(t); } });
var ɵImagePicker_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(ImagePicker);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ImagePicker, [{
        type: core$1.Injectable
    }], null, null); })();
    return ImagePicker;
}(core.IonicNativePlugin));

exports.ImagePicker = ImagePicker;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlcyI6WyJidW5kbGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7MEJBR007QUFDTjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxudmFyIHRzbGliID0gcmVxdWlyZSgndHNsaWInKTtcbnZhciBjb3JlJDEgPSByZXF1aXJlKCdAYW5ndWxhci9jb3JlJyk7XG52YXIgY29yZSA9IHJlcXVpcmUoJ0Bpb25pYy1uYXRpdmUvY29yZScpO1xuXG5leHBvcnRzLk91dHB1dFR5cGUgPSB2b2lkIDA7XG4oZnVuY3Rpb24gKE91dHB1dFR5cGUpIHtcbiAgICBPdXRwdXRUeXBlW091dHB1dFR5cGVbXCJGSUxFX1VSTFwiXSA9IDBdID0gXCJGSUxFX1VSTFwiO1xuICAgIE91dHB1dFR5cGVbT3V0cHV0VHlwZVtcIkRBVEFfVVJMXCJdID0gMV0gPSBcIkRBVEFfVVJMXCI7XG59KShleHBvcnRzLk91dHB1dFR5cGUgfHwgKGV4cG9ydHMuT3V0cHV0VHlwZSA9IHt9KSk7XG52YXIgSW1hZ2VQaWNrZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgdHNsaWIuX19leHRlbmRzKEltYWdlUGlja2VyLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEltYWdlUGlja2VyKCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgfVxuICAgIEltYWdlUGlja2VyLnByb3RvdHlwZS5nZXRQaWN0dXJlcyA9IGZ1bmN0aW9uIChvcHRpb25zKSB7IHJldHVybiBjb3JlLmNvcmRvdmEodGhpcywgXCJnZXRQaWN0dXJlc1wiLCB7IFwiY2FsbGJhY2tPcmRlclwiOiBcInJldmVyc2VcIiB9LCBhcmd1bWVudHMpOyB9O1xuICAgIEltYWdlUGlja2VyLnByb3RvdHlwZS5oYXNSZWFkUGVybWlzc2lvbiA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNvcmUuY29yZG92YSh0aGlzLCBcImhhc1JlYWRQZXJtaXNzaW9uXCIsIHsgXCJwbGF0Zm9ybXNcIjogW1wiQW5kcm9pZFwiXSB9LCBhcmd1bWVudHMpOyB9O1xuICAgIEltYWdlUGlja2VyLnByb3RvdHlwZS5yZXF1ZXN0UmVhZFBlcm1pc3Npb24gPSBmdW5jdGlvbiAoKSB7IHJldHVybiBjb3JlLmNvcmRvdmEodGhpcywgXCJyZXF1ZXN0UmVhZFBlcm1pc3Npb25cIiwgeyBcInBsYXRmb3Jtc1wiOiBbXCJBbmRyb2lkXCJdIH0sIGFyZ3VtZW50cyk7IH07XG4gICAgSW1hZ2VQaWNrZXIucGx1Z2luTmFtZSA9IFwiSW1hZ2VQaWNrZXJcIjtcbiAgICBJbWFnZVBpY2tlci5wbHVnaW4gPSBcImNvcmRvdmEtcGx1Z2luLXRlbGVyaWstaW1hZ2VwaWNrZXJcIjtcbiAgICBJbWFnZVBpY2tlci5wbHVnaW5SZWYgPSBcIndpbmRvdy5pbWFnZVBpY2tlclwiO1xuICAgIEltYWdlUGlja2VyLnJlcG8gPSBcImh0dHBzOi8vZ2l0aHViLmNvbS9UZWxlcmlrLVZlcmlmaWVkLVBsdWdpbnMvSW1hZ2VQaWNrZXJcIjtcbiAgICBJbWFnZVBpY2tlci5pbnN0YWxsID0gXCJpb25pYyBjb3Jkb3ZhIHBsdWdpbiBhZGQgY29yZG92YS1wbHVnaW4tdGVsZXJpay1pbWFnZXBpY2tlciAtLXZhcmlhYmxlIFBIT1RPX0xJQlJBUllfVVNBR0VfREVTQ1JJUFRJT049XFxcInlvdXIgdXNhZ2UgbWVzc2FnZVxcXCJcIjtcbiAgICBJbWFnZVBpY2tlci5pbnN0YWxsVmFyaWFibGVzID0gW1wiUEhPVE9fTElCUkFSWV9VU0FHRV9ERVNDUklQVElPTlwiXTtcbiAgICBJbWFnZVBpY2tlci5wbGF0Zm9ybXMgPSBbXCJBbmRyb2lkXCIsIFwiaU9TXCJdO1xuICAgIEltYWdlUGlja2VyLmRlY29yYXRvcnMgPSBbXG4gICAgICAgIHsgdHlwZTogY29yZSQxLkluamVjdGFibGUgfVxuICAgIF07XG4gICAgcmV0dXJuIEltYWdlUGlja2VyO1xufShjb3JlLklvbmljTmF0aXZlUGx1Z2luKSk7XG5cbmV4cG9ydHMuSW1hZ2VQaWNrZXIgPSBJbWFnZVBpY2tlcjtcbiJdfQ==