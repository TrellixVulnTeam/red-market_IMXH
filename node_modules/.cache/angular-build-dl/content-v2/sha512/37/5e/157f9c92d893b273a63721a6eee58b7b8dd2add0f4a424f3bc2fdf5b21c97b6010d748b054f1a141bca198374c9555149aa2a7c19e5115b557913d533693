{"version":3,"sources":["webpack:///src/app/pages/onboarding/onboarding.page.ts","webpack:///src/app/pages/onboarding/onboarding.page.html","webpack:///src/app/pages/onboarding/onboarding.module.ts","webpack:///src/app/pages/onboarding/onboarding-routing.module.ts"],"names":["OnboardingPage","router","route","authService","ngZone","loadingController","location","historyHelper","slidesOptions","zoom","toggle","validation_messages","type","message","loginForm","compose","required","pattern","minLength","authRedirectResult","getRedirectResult","subscribe","result","error","manageAuthWithProvidersErrors","redirectLoggedUserToProfilePage","queryParams","params","authProvider","presentLoading","dismissLoading","didInit","navigateByUrl","run","previousUrl","navigate","replaceUrl","authProviderCapitalized","toUpperCase","slice","create","duration","then","loader","currentUrl","path","includes","redirectLoader","present","dismiss","replaceState","getState","errorMessage","submitError","url","split","resetSubmitError","signInWithEmail","value","user","prepareForAuthWithProvidersRedirection","signInWithFacebook","signInWithGoogle","console","log","signInWithTwitter","slides","slideNext","next","finish","firebaseLoginPage","redirectLoggedInToProfile","routes","component","canActivate","data","authGuardPipe","OnboardingPageModule","forChild","initializeApp","firebase","OnboardingPageRoutingModule"],"mappings":"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","file":"pages-onboarding-onboarding-module-es5.js","sourcesContent":["import { Location } from '@angular/common';\nimport {AfterViewInit, Component, NgZone, OnDestroy, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IonSlides, LoadingController } from '@ionic/angular';\nimport { Subscription } from 'rxjs';\nimport { HistoryHelperService } from '../../../app/utils/history-helper.service';\nimport { FirebaseAuthService } from '../../firebase/auth/firebase-auth.service';\n\n\n\n@Component({\n  selector: 'app-onboarding',\n  templateUrl: './onboarding.page.html',\n  styleUrls: ['./onboarding.page.scss'],\n})\nexport class OnboardingPage implements OnDestroy,AfterViewInit{\n\n  @ViewChild(IonSlides, { static: true }) slides: IonSlides;\n\n  loginForm: FormGroup;\n  submitError: string;\n  didInit;\n  redirectLoader: HTMLIonLoadingElement;\n  authRedirectResult: Subscription;\n  slidesOptions: any = {\n    zoom: {\n      toggle: false // Disable zooming to prevent weird double tap zomming on slide images\n    }\n  };\n\n  validation_messages = {\n    'email': [\n      { type: 'required', message: 'Email is required.' },\n      { type: 'pattern', message: 'Enter a valid email.' }\n    ],\n    'password': [\n      { type: 'required', message: 'Password is required.' },\n      { type: 'minlength', message: 'Password must be at least 6 characters long.' }\n    ]\n  };\n\n  constructor(\n    public router: Router,\n    public route: ActivatedRoute,\n    public authService: FirebaseAuthService,\n    private ngZone: NgZone,\n    public loadingController: LoadingController,\n    public location: Location,\n    public historyHelper: HistoryHelperService\n  ) {\n    this.loginForm = new FormGroup({\n      'email': new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      'password': new FormControl('', Validators.compose([\n        Validators.minLength(6),\n        Validators.required\n      ]))\n    });\n\n    // Get firebase authentication redirect result invoken when using signInWithRedirect()\n    // signInWithRedirect() is only used when client is in web but not desktop\n    this.authRedirectResult = this.authService.getRedirectResult()\n    .subscribe(result => {\n      if (result.error) {\n        this.manageAuthWithProvidersErrors(result.error);\n      } else {\n        this.redirectLoggedUserToProfilePage();\n      }\n  });\n\n    // Check if url contains our custom 'auth-redirect' param, then show a loader while we receive the getRedirectResult notification\n    this.route.queryParams.subscribe(params => {\n      const authProvider = params['auth-redirect'];\n      if (authProvider) {\n        this.presentLoading(authProvider);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.dismissLoading();\n  }\n  ngAfterViewInit() {\n    this.didInit = true;\n}\n\n  firebaseLoginPage(){\n    this.router.navigateByUrl(\"/firebase\");\n  }\n\n  // Once the auth provider finished the authentication flow, and the auth redirect completes,\n  // hide the loader and redirect the user to the profile page\n  redirectLoggedUserToProfilePage() {\n    this.dismissLoading();\n    // As we are calling the Angular router navigation inside a subscribe method, the navigation will be triggered outside Angular zone.\n    // That's why we need to wrap the router navigation call inside an ngZone wrapper\n    this.ngZone.run(() => {\n      // Get previous URL from our custom History Helper\n      // If there's no previous page, then redirect to profile\n      // const previousUrl = this.historyHelper.previousUrl || 'firebase/auth/profile';\n      const previousUrl = 'home';\n\n      // No need to store in the navigation history the sign-in page with redirect params (it's justa a mandatory mid-step)\n      // Navigate to profile and replace current url with profile\n      this.router.navigate([previousUrl], { replaceUrl: true });\n    });\n  }\n\n  async presentLoading(authProvider?: string) {\n    const authProviderCapitalized = authProvider[0].toUpperCase() + authProvider.slice(1);\n\n    this.loadingController.create({\n      message: authProvider ? 'Signing in with ' + authProviderCapitalized : 'Signin in ...',\n      duration: 4000\n    }).then((loader) => {\n      const currentUrl = this.location.path();\n      if (currentUrl.includes('auth-redirect')) {\n        this.redirectLoader = loader;\n        this.redirectLoader.present();\n      }\n    });\n  }\n\n  async dismissLoading() {\n    if (this.redirectLoader) {\n      await this.redirectLoader.dismiss();\n    }\n  }\n\n  // Before invoking auth provider redirect flow, present a loading indicator and add a flag to the path.\n  // The precense of the flag in the path indicates we should wait for the auth redirect to complete.\n  prepareForAuthWithProvidersRedirection(authProvider: string) {\n    this.presentLoading(authProvider);\n\n    this.location.replaceState(this.location.path(), 'auth-redirect=' + authProvider, this.location.getState());\n  }\n\n  manageAuthWithProvidersErrors(errorMessage: string) {\n    this.submitError = errorMessage;\n    // remove auth-redirect param from url\n    this.location.replaceState(this.router.url.split('?')[0], '');\n    this.dismissLoading();\n  }\n\n  resetSubmitError() {\n    this.submitError = null;\n  }\n\n  signInWithEmail() {\n    this.resetSubmitError();\n    this.authService.signInWithEmail(this.loginForm.value['email'], this.loginForm.value['password'])\n    .then(user => {\n      // navigate to user profile\n      this.redirectLoggedUserToProfilePage();\n    })\n    .catch(error => {\n      this.submitError = error.message;\n      this.dismissLoading();\n    });\n  }\n\n  doFacebookLogin(): void {\n    this.resetSubmitError();\n    this.prepareForAuthWithProvidersRedirection('facebook');\n\n    this.authService.signInWithFacebook()\n    .subscribe((result) => {\n      // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n      // const token = result.credential.accessToken;\n      this.redirectLoggedUserToProfilePage();\n    }, (error) => {\n      this.manageAuthWithProvidersErrors(error.message);\n    });\n  }\n\n  doGoogleLogin(): void {\n    this.resetSubmitError();\n    this.prepareForAuthWithProvidersRedirection('google');\n\n    this.authService.signInWithGoogle()\n    .subscribe((result) => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      // var token = result.credential.accessToken;\n      this.redirectLoggedUserToProfilePage();\n    }, (error) => {\n        console.log(error);\n      this.manageAuthWithProvidersErrors(error.message);\n    });\n  }\n\n  doTwitterLogin(): void {\n    this.resetSubmitError();\n    this.prepareForAuthWithProvidersRedirection('twitter');\n\n    this.authService.signInWithTwitter()\n    .subscribe((result) => {\n\n      // This gives you a Twitter Access Token. You can use it to access the Twitter API.\n      // var token = result.credential.accessToken;\n      this.redirectLoggedUserToProfilePage();\n    }, (error) => {\n      console.log(error);\n      this.manageAuthWithProvidersErrors(error.message);\n    });\n  }\n\n  async next() {\n   this.slides.slideNext();\n\n  }\n\n   finish() {\n      this.router.navigateByUrl('/login');\n  }\n\n\n\n}\n","<ion-content fullscreen class=\" content ion-padding\" scroll-y=\"false\">\n  <ion-slides  pager=\"false\"  [options]=\"slidesOptions\" >\n\n    <ion-slide>\n      <div class=\"slide\">\n        <img src=\"../../../assets/imgs/wender.svg\"/>\n        <h2>Welcome</h2>\n        <p>The <b>ionic conference app</b> is a practical preview of the ionic framework in action, and a demonstration of proper code use.</p>\n      </div>\n      <ion-button shape=\"round\" (click)=\"next()\" >Next\n        <ion-icon slot=\"end\" name=\"arrow-forward\"></ion-icon></ion-button>\n    </ion-slide>\n\n    <ion-slide>\n      <div class=\"slide\">\n      <img src=\"../../../assets/imgs/search.svg\"/>\n      <h2>What is Ionic?</h2>\n      <p><b>Ionic Framework</b> is an open source SDK that enables developers to build high quality mobile apps with web technologies like HTML, CSS, and JavaScript.</p>\n      </div>\n      <ion-button shape=\"round\" (click)=\"next()\" >Next\n        <ion-icon slot=\"end\" name=\"arrow-forward\"></ion-icon></ion-button>\n    </ion-slide>\n\n    <ion-slide>\n      <div class=\"slide\">\n      <img src=\"../../../assets/imgs/search.svg\"/>\n      <h2>Lets Get Started !</h2>\n      <p><b>Ionic Framework</b> is an open source SDK that enables developers to build high quality mobile apps with web technologies like HTML, CSS, and JavaScript.</p>\n      </div>\n      <ion-button shape=\"round\" (click)=\"next()\" >Get Started\n        <ion-icon slot=\"end\" name=\"arrow-forward\"></ion-icon></ion-button>\n        <ion-item lines=\"none\" class=\"alt-call-to-action-row\">\n          <span class=\"cta-leading-text\">Already have an account?</span>\n          <ion-button class=\"login-button\" fill=\"clear\" [routerLink]=\"['/tabs']\">\n            Login here\n          </ion-button>\n        </ion-item>\n    </ion-slide>\n\n    <ion-slide>\n      <div class=\"slide\">\n      <img src=\"../../../assets/imgs/social.svg\"/>\n      <h2>Let's Create your Account</h2>\n      <h3>Continue with </h3>\n       </div>\n      <ion-button class=\"fb-btn\"  shape=\"round\"(click)=\"finish()\">\n        <ion-icon name=\"logo-facebook\"></ion-icon>\n             Continue with FaceBook\n        </ion-button>\n\n        <ion-button  class=\"email-btn\" fill=\"outline\" shape=\"round\"  (click)=\"next()\" > <ion-icon name=\"mail\"></ion-icon>\n          Continue with Email\n        </ion-button>\n\n        <ion-button class=\"google-btn\"  shape=\"round\"(click)=\"firebaseLoginPage()\" >\n          <ion-icon name=\"logo-google\"></ion-icon>\n          Continue with Google\n        </ion-button>\n\n    </ion-slide>\n\n    <ion-slide>\n      <img src=\"../../../assets/imgs/social.svg\"/>\n      <h3>Almost There , Lets create your account</h3>\n      <p></p>\n      <ion-item >\n        <ion-input type=\"email\" placeholder=\"email\"></ion-input>\n      </ion-item>\n      <ion-item >\n        <ion-input type=\"password\" placeholder=\"password\"></ion-input>\n      </ion-item>\n      <p></p>\n    </ion-slide>\n  </ion-slides>\n\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OnboardingPageRoutingModule } from './onboarding-routing.module';\n\nimport { OnboardingPage } from './onboarding.page';\nimport { FirebaseAuthService } from '../../firebase/auth/firebase-auth.service';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFireModule } from '@angular/fire';\nimport { environment } from '../../../environments/environment';\nimport { FirebaseSignInPage } from '../../firebase/auth/sign-in/firebase-sign-in.page';\nimport { AngularFireAuthGuard } from '@angular/fire/auth-guard';\nimport { RouterModule, Routes } from '@angular/router';\nimport { map } from 'rxjs/operators';\n\n// Firebase guard to redirect logged in users to profile\nconst redirectLoggedInToProfile = (next) => map(user => {\n  // when queryParams['auth-redirect'] don't redirect because we want\n  // the component to handle the redirection\n  if (user !== null && !next.queryParams['auth-redirect']) {\n    return ['home/'];\n  } else {\n    return true;\n  }\n});\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FirebaseSignInPage,\n    canActivate: [AngularFireAuthGuard],\n    data: { authGuardPipe: redirectLoggedInToProfile }\n  }\n];\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    OnboardingPageRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule\n  ],\n  declarations: [OnboardingPage],\n  providers:[FirebaseAuthService]\n})\nexport class OnboardingPageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OnboardingPage } from './onboarding.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OnboardingPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OnboardingPageRoutingModule {}\n"]}