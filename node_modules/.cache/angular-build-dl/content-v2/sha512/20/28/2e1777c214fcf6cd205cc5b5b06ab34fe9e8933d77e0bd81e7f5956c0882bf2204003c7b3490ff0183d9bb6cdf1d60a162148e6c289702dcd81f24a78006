{"version":3,"sources":["webpack:///src/app/pages/chat-list/chat-list.module.ts","webpack:///src/app/pages/chat-list/chat-list.page.ts","webpack:///src/app/pages/chat-list/chat-list.page.html","webpack:///src/app/pages/chat-list/chat-list-routing.module.ts"],"names":["ChatListPageModule","forRoot","relativeTimeThresholdOptions","ChatListPage","chatService","router","chatsForDisplay","showAgeFilter","currentUser","getCurrentUser","subscribe","user","uid","getAllReceiveMsgs","msgs","console","log","JSON","stringify","chats","chat","sender","item","poster","receiver","navigate","chatId","routedFromChatList","routes","path","component","loadChildren","then","m","ChatDetailPageModule","ChatListPageRoutingModule","forChild"],"mappings":"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","file":"pages-chat-list-chat-list-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChatListPageRoutingModule } from './chat-list-routing.module';\n\nimport { ChatListPage } from './chat-list.page';\nimport { ItemService } from '../../Services/account/item-service';\nimport { ComponentsModule } from '../../components/components.module';\nimport { ChatService } from '../chat-detail/chat-service';\nimport { MomentModule } from 'ngx-moment';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ChatListPageRoutingModule,\n    ComponentsModule,\n    MomentModule.forRoot({\n      relativeTimeThresholdOptions: {\n        'm': 59\n      }\n    }),\n\n  ],\n  declarations: [ChatListPage],\n  providers:[ItemService,ChatService]\n})\nexport class ChatListPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { forkJoin } from 'rxjs';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { from } from 'rxjs/internal/observable/from';\nimport { ItemService } from '../../Services/account/item-service';\nimport { ChatService } from '../chat-detail/chat-service';\n\n@Component({\n  selector: 'app-chat-list',\n  templateUrl: './chat-list.page.html',\n  styleUrls: ['./chat-list.page.scss','./chat-list.page.ios.scss'],\n})\nexport class ChatListPage implements OnInit {\n\n  chats: any[];\n  chatsForDisplay: any[] = [];\n\n  messages :Observable<any> ;\n  sent : Observable<any>\n  received: Observable<any>;\n\n  rangeForm: FormGroup;\n  searchQuery: string;\n  showAgeFilter = false;\n  currentUser = null;\n  constructor(\n    private chatService : ChatService,\n    private router :Router\n  ) { }\n\n  ngOnInit() {\n\n    // return combineLatest<any[]>(received, sent).pipe(\n    //   map((arr) => arr.reduce((acc, cur) => acc.concat(cur)))\n    // );\n\n    this.chatService.getCurrentUser().subscribe(user=>{\n      this.currentUser=user.uid\n      this.chatService.getAllReceiveMsgs(user.uid).subscribe(msgs=>{\n       console.log('MSGGG FOREACH=='+JSON.stringify(msgs));\n        this.chats = msgs\n        console.log('MESSAGE for user '+user.uid+' ======= '+JSON.stringify(msgs))\n     });\n    });\n\n  }\n\n  chatUser(chat){\n    if(chat.sender.uid==this.currentUser){\n      chat.item.poster = chat.receiver;\n    }\n    if(chat.receiver.uid==this.currentUser){\n      chat.item.poster = chat.sender;\n    }\n    console.log('CHAT DETAIL ++++++++++++++ '+JSON.stringify(chat))\n    this.router.navigate([\"/redmarket/chat/detail\",{  item: JSON.stringify( chat.item),chatId:chat.chatId,routedFromChatList : true }])\n  }\n}\n\n","<ion-header [translucent]=\"true\" class=\"ion-no-border\">\n  <ion-toolbar>\n\n      <ion-buttons slot=\"start\">\n        <ion-back-button defaultHref=\"/redmarket/items\" mode=\"md\">\n        </ion-back-button>\n      </ion-buttons>\n\n    <ion-title >Chats</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"firebase-listing-content\">\n  <ion-list class=\"items-list\" lines=\"full\">\n    <ion-item class=\"list-item\" *ngFor=\"let chat of chats\" button mode=\"ios\">\n      <ion-row class=\"user-row\" (click)=\"chatUser(chat)\">\n        <ion-col size=\"2.5\" class=\"user-image-wrapper\">\n\n          <img  *ngIf=\"chat.sender.uid==currentUser \" class=\"user-img\" [src]=\"chat?.receiver.img\" [alt]=\"'item image'\">\n          <img *ngIf=\"chat.receiver.uid==currentUser\"  class=\"user-img\" [src]=\"chat?.sender.img \" [alt]=\"'item image'\">\n          <!-- <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n            <app-image-shell class=\"user-image\" animation=\"spinner\" [src]=\"chat?.sender.img\" [alt]=\"'item image'\"></app-image-shell>\n          </app-aspect-ratio> -->\n        </ion-col>\n        <ion-col class=\"user-data-wrapper\">\n          <div class=\"user-info\">\n            <h3 class=\"user-name\" *ngIf=\"chat?.sender.uid==currentUser\">\n              {{chat?.receiver?.name}}\n            </h3>\n\n            <h3 class=\"user-name\"  *ngIf=\"chat?.receiver.uid==currentUser\">\n              {{ chat?.sender?.name}}\n            </h3>\n\n            <div class=\"lst-msg\">{{chat?.lmsg}}</div>\n            <p color=\"light\">{{chat?.created?.seconds *1000 | amTimeAgo}} </p>\n          </div>\n        </ion-col>\n        <ion-col size=\"2.5\">\n          <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n            <app-image-shell class=\"user-image\" animation=\"spinner\" [src]=\"chat?.item.img\" [alt]=\"'item image'\"></app-image-shell>\n          </app-aspect-ratio>\n        </ion-col>\n      </ion-row>\n    </ion-item>\n  </ion-list>\n  <h3 *ngIf=\"!chats\" class=\"empty-list-message\">\n    No users found for the selected filters.\n  </h3>\n</ion-content>\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChatListPage } from './chat-list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChatListPage\n  },\n  {\n    path: 'detail',\n    loadChildren: () => import('../chat-detail/chat-detail.module').then( m => m.ChatDetailPageModule)\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChatListPageRoutingModule {}\n"]}