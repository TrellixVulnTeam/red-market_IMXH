{"version":3,"sources":["webpack:///src/app/pages/profile-home/profile-setting/profile-setting.component.ts","webpack:///src/app/pages/profile-home/profile-setting/profile-setting.component.html","webpack:///src/app/Services/account/user.service.ts","webpack:///src/app/pages/profile-home/profile-home-routing.module.ts","webpack:///src/app/pages/profile-home/profile-home.page.ts","webpack:///src/app/pages/profile-home/profile-home.page.html","webpack:///src/app/pages/profile-home/profile-home.module.ts","webpack:///src/app/firebase/crud/user/firebase-user.model.ts","webpack:///src/app/model/user-profile.model.ts","webpack:///src/app/validators/checkbox-checked.validator.ts"],"names":["ProfileSettingComponent","modalController","alertController","router","ngZone","headerTitle","userData","avatar","createUserForm","name","required","lastname","email","compose","pattern","phone","birthdate","skills","minSelectedCheckboxes","spanish","english","french","dismiss","then","createUser","dismissModal","changeUserImage","UserService","platformId","transferStateHelper","http","rawDataSource","get","pipe","data","profile","Object","assign","cachedDataSource","checkDataSourceState","dataSource","profileDataStore","shellModel","load","routes","path","component","ProfileHomePageRoutingModule","forChild","ProfileHomePage","route","userService","authService","routerOutlet","themeSwitcher","available_languages","currentModal","isShell","subscriptions","getProfileDataSource","subscribe","state","error","console","log","unsubscribe","signOut","navigate","replaceUrl","changeTheme","create","animated","backdropDismiss","showBackdrop","swipeToClose","presentingElement","nativeEl","mode","modal","present","createModal","ThemeSwitcher","ProfileHomePageModule","FirebaseSkillModel","FirebaseUserModel","languages","FirebaseCombinedUserModel","UserProfileModel","friends","image","photos","CheckboxCheckedValidator","min","validator","formArray","totalSelected","controls","map","control","value","reduce","prev","next"],"mappings":"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","file":"pages-profile-home-profile-home-module-es5.js","sourcesContent":["import { Component, NgZone, OnInit } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AlertController, ModalController } from '@ionic/angular';\nimport dayjs from 'dayjs';\nimport { FirebaseUserModel } from '../../../firebase/crud/user/firebase-user.model';\nimport { CheckboxCheckedValidator } from '../../../validators/checkbox-checked.validator';\n\n@Component({\n  selector: 'app-profile-setting',\n  templateUrl: './profile-setting.component.html',\n  styleUrls: ['./profile-setting.component.scss'],\n})\nexport class ProfileSettingComponent implements OnInit {\n\n  headerTitle = \"\";\n  createUserForm:FormGroup;\n  userData: FirebaseUserModel = new FirebaseUserModel();\n  constructor(\n    private modalController: ModalController,\n    public alertController: AlertController,\n    public router: Router,\n    private ngZone: NgZone\n  ) { }\n\n  ngOnInit() {\n        // default image\n        this.userData.avatar = 'https://s3-us-west-2.amazonaws.com/ionicthemes/otros/avatar-placeholder.png';\n\n        this.createUserForm = new FormGroup({\n          name: new FormControl('', Validators.required),\n          lastname: new FormControl('', Validators.required),\n          email: new FormControl('', Validators.compose([\n            Validators.required,\n            Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n          ])),\n          phone: new FormControl('', Validators.required),\n          birthdate: new FormControl(null, Validators.required),\n          skills: new FormArray([], CheckboxCheckedValidator.minSelectedCheckboxes(1)),\n          spanish: new FormControl(),\n          english: new FormControl(),\n          french: new FormControl()\n        \n  })\n}\n\nchangeUserImage(){\n\n}\n\ncreateUser(){\n  \n}\n  dismissModal() {\n    if (this.modalController) {\n      this.modalController.dismiss().then(() => { this.modalController = null; });\n    }\n  }\n}\n","<!-- This is the proper way if you have submit button outside your ion-content form (typically in the ion-header or ion-footer) -->\n<!-- (ref: https://github.com/ionic-team/ionic/issues/16661) -->\n<form class=\"create-user-form ion-page\" [formGroup]=\"createUserForm\" (ngSubmit)=\"createUser()\">\n  <ion-header>\n    <ion-toolbar>\n      <ion-buttons slot=\"end\">\n        <ion-button (click)=\"dismissModal()\">\n          <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon>\n        </ion-button>\n      </ion-buttons>\n      <ion-title>New User</ion-title>\n    </ion-toolbar>\n  </ion-header>\n\n  <ion-content class=\"create-user-content\">\n    <ion-row class=\"select-user-image-row\">\n      <ion-col class=\"user-image-col\" size=\"5\">\n        <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n          <app-image-shell [display]=\"'cover'\" class=\"user-image\" animation=\"spinner\" [src]=\"userData.avatar\" [alt]=\"'user image'\"></app-image-shell>\n        </app-aspect-ratio>\n        <ion-button class=\"change-image-btn\" color=\"primary\" (click)=\"changeUserImage()\">\n          <ion-icon class=\"btn-icon\" slot=\"icon-only\" name=\"camera\"></ion-icon>\n        </ion-button>\n      </ion-col>\n    </ion-row>\n\n\n      <ion-list class=\"inputs-list\" lines=\"full\">\n        <ion-item class=\"input-item\">\n          <ion-label color=\"primary\" position=\"floating\">Name</ion-label>\n          <ion-input type=\"text\" formControlName=\"name\" required></ion-input>\n        </ion-item>\n        <ion-item class=\"input-item\">\n          <ion-label color=\"primary\" position=\"floating\">Last name</ion-label>\n          <ion-input type=\"text\" formControlName=\"lastname\" required></ion-input>\n        </ion-item>\n        <ion-item class=\"input-item\">\n          <ion-label color=\"primary\" position=\"floating\">Date of Birth</ion-label>\n          <ion-datetime display-format=\"DD/MM/YYYY\" picker-format=\"DD MMMM YYYY\" formControlName=\"birthdate\" required></ion-datetime>\n        </ion-item>\n        <ion-item class=\"input-item\">\n          <ion-label color=\"primary\" position=\"floating\">Phone number</ion-label>\n          <ion-input type=\"tel\" formControlName=\"phone\" required></ion-input>\n        </ion-item>\n        <ion-item class=\"input-item\">\n          <ion-label color=\"primary\" position=\"floating\">Email</ion-label>\n          <ion-input type=\"email\" formControlName=\"email\" required></ion-input>\n        </ion-item>\n      </ion-list>\n\n  </ion-content>\n\n  <ion-footer>\n    <ion-toolbar>\n      \n      <ion-row class=\"details-purchase-options-row\">\n        <ion-col >\n          <ion-button color=\"primary\" expand=\"block\" >Make offer</ion-button>\n        </ion-col>\n      </ion-row>\n      </ion-toolbar>\n  </ion-footer>\n</form>\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DataStore } from '../../shell/data-store';\nimport { UserProfileModel } from './../../model/user-profile.model';\nimport { TransferStateHelper } from '../../utils/transfer-state-helper';\nimport { isPlatformServer } from '@angular/common';\n\n@Injectable()\nexport class UserService {\n  private profileDataStore: DataStore<UserProfileModel>;\n \n  constructor(\n    @Inject(PLATFORM_ID) private platformId: object,\n    private transferStateHelper: TransferStateHelper,\n    private http: HttpClient\n  ) { }\n\n  public getProfileDataSource(): Observable<UserProfileModel> {\n    const rawDataSource = this.http.get<UserProfileModel>('./assets/sample-data/user/user-profile.json')\n    .pipe(\n      map(\n        (data: UserProfileModel) => {\n          // Note: HttpClient cannot know how to instantiate a class for the returned data\n          // We need to properly cast types from json data\n          const profile = new UserProfileModel();\n\n          // The Object.assign() method copies all enumerable own properties from one or more source objects to a target object.\n          // Note: If you have non-enummerable properties, you can try a spread operator instead. profile = {...data};\n          // (see: https://scotch.io/bar-talk/copying-objects-in-javascript#toc-using-spread-elements-)\n          Object.assign(profile, data);\n\n          return profile;\n        }\n      )\n    );\n\n    // This method tapps into the raw data source and stores the resolved data in the TransferState, then when\n    // transitioning from the server rendered view to the browser, checks if we already loaded the data in the server to prevent\n    // duplicate http requests.\n    const cachedDataSource = this.transferStateHelper.checkDataSourceState('profile-state', rawDataSource);\n\n    return cachedDataSource;\n  }\n\n  public getProfileStore(dataSource: Observable<UserProfileModel>): DataStore<UserProfileModel> {\n    // Use cache if available\n    if (!this.profileDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: UserProfileModel = new UserProfileModel();\n      this.profileDataStore = new DataStore(shellModel);\n\n      // If running in the server, then don't add shell to the Data Store\n      // If we already loaded the Data Source in the server, then don't show a shell when transitioning back to the broswer from the server\n      if (isPlatformServer(this.platformId) || dataSource['ssr_state']) {\n        // Trigger loading mechanism with 0 delay (this will prevent the shell to be shown)\n        this.profileDataStore.load(dataSource, 0);\n      } else { // On browser transitions\n        // Trigger the loading mechanism (with shell)\n        this.profileDataStore.load(dataSource);\n      }\n    }\n\n    return this.profileDataStore;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { ProfileHomePage } from './profile-home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfileHomePage\n  }\n];\n\n@NgModule({\n  imports: [IonicModule, RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfileHomePageRoutingModule {}\n","import { Component, HostBinding, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertController, IonRouterOutlet, ModalController } from '@ionic/angular';\nimport { Subscription } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { ThemeService } from '../../Services/theme/theme.service';\nimport { FirebaseAuthService } from '../../firebase/auth/firebase-auth.service';\nimport { UserService } from '../../Services/account/user.service';\nimport { UserProfileModel } from '../../user/profile/user-profile.model';\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { ProfileSettingComponent } from './profile-setting/profile-setting.component';\n\n@Component({\n  selector: 'app-profile-home',\n  templateUrl: './profile-home.page.html',\n  styleUrls: [\n    './styles/firebase-user-details.page.scss',\n    './styles/firebase-user-details.shell.scss'\n  ],\n})\nexport class ProfileHomePage implements OnInit {\n\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  subscriptions: Subscription;\n\n  profile: UserProfileModel;\n  available_languages = [];\n  translations;\n  currentModal=null;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.profile && this.profile.isShell) ? true : false;\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    public alertController: AlertController,\n    private userService : UserService,\n    private authService:FirebaseAuthService,\n    private router:Router,\n    private routerOutlet :IonRouterOutlet,\n    private modalController :ModalController,\n    private themeSwitcher :ThemeService\n  ) { }\n\n\n  ngOnInit(): void {\n    this.subscriptions = this.userService.getProfileDataSource()\n    .subscribe((state) => {\n      this.profile = state;\n    }, (error) => console.log(error));\n  }\n\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    this.subscriptions.unsubscribe();\n  }\n  profileClick(){\n    \n  }\n\n  signOut() {\n    this.authService.signOut().subscribe(() => {\n      // Sign-out successful.\n      // Replace state as we are no longer authorized to access profile page.\n      this.router.navigate(['firebase/auth/sign-in'], { replaceUrl: true });\n    }, (error) => {\n      console.log('signout error', error);\n    });\n  }\n  ThemeSwitcher() {\n    this.themeSwitcher.changeTheme();\n    }\n  \n\n\n  async createModal() {\n    const modal = await this.modalController.create({\n      component: ProfileSettingComponent,\n      animated:true,\n      backdropDismiss:true,\n      showBackdrop:true,\n      swipeToClose:true,\n      presentingElement : this.routerOutlet.nativeEl,\n      mode:'ios'\n\n    });\n\n    await modal.present();\n    this.currentModal = modal;\n  \n  }\n}\n","<ion-header  class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"/home\" mode=\"md\"></ion-back-button>\n    </ion-buttons>\n    <ion-buttons slot=\"end\">\n      <ion-button>\n        <ion-icon name=\"settings-outline\"></ion-icon>\n       </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"user-content\">\n\n  <ion-row class=\"user-info-row\">\n    <ion-col class=\"user-image-col\" size=\"5\">\n      <ion-badge slot=\"start\" color=\"primary\">11</ion-badge>\n      <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n        <app-image-shell\n          [display]=\"'cover'\"\n          class=\"user-image\"\n          animation=\"spinner\"\n          [src]=\"profile?.userImage\"\n          [alt]=\"'item image'\"\n        >\n        </app-image-shell>\n      </app-aspect-ratio>\n    </ion-col>\n    <ion-col class=\"user-details-col\" size=\"12\">\n      <h2 class=\"user-name\">\n        <app-text-shell\n          animation=\"bouncing\"\n          [data]=\"profile?.name\"\n        ></app-text-shell>\n      </h2>\n      <span class=\"user-age\">\n        <app-text-shell\n          animation=\"bouncing\"\n          [data]=\"profile?.job\"\n        ></app-text-shell>\n      </span>\n      <div class=\"user-stat\">\n          <ion-badge color=\"primary\">100 Followers</ion-badge>\n          <ion-badge color=\"secondary\">10 Following</ion-badge>\n      </div>\n    </ion-col>\n    <ion-col class=\"actions-col\" size=\"12\">\n      <ion-row>\n        <ion-col size=\"3\">\n          <ion-button class=\"action-btn\" color=\"secondary\">\n            <ion-icon class=\"btn-icon\" slot=\"icon-only\" name=\"mail\"></ion-icon>\n          </ion-button>\n        </ion-col>\n        <ion-col size=\"3\">\n          <ion-button class=\"action-btn\" color=\"secondary\">\n            <ion-icon class=\"btn-icon\" slot=\"icon-only\" name=\"call\"></ion-icon>\n          </ion-button>\n        </ion-col>\n        <ion-col size=\"3\">\n          <ion-button class=\"action-btn\" color=\"secondary\">\n            <ion-icon\n              class=\"btn-icon\"\n              slot=\"icon-only\"\n              name=\"videocam\"\n            ></ion-icon>\n          </ion-button>\n        </ion-col>\n        <ion-col size=\"3\">\n          <ion-button class=\"action-btn\" color=\"secondary\">\n            <ion-icon class=\"btn-icon\" slot=\"icon-only\" name=\"text\"></ion-icon>\n          </ion-button>\n        </ion-col>\n      </ion-row>\n    </ion-col>\n  </ion-row>\n  <div class=\"content-section user-languages-wrapper\">\n    <ion-row class=\"language-item-row\">\n      <ion-col class=\"language-item\">\n  <ion-list lines=\"none\" mode=\"ios\">\n          <ion-item button (click)=\"createModal()\">  \n            <ion-icon slot=\"start\" name=\"person-outline\"></ion-icon>\n            <ion-label>\n              <p>Profile</p>\n            </ion-label>\n          </ion-item>\n\n          <ion-item [routerLink]=\"['/settings']\" >  \n            <ion-icon slot=\"start\" name=\"people-outline\"></ion-icon>\n            <ion-label>\n              <p>Language</p>\n            </ion-label>\n          </ion-item>\n\n          <ion-item (click)=\"ThemeSwitcher()\">\n            <ion-icon slot=\"start\" name=\"color-fill-outline\" detail></ion-icon>\n            <ion-label>\n              <p>Theme</p>\n            </ion-label>\n          </ion-item>\n          <ion-item [routerLink]=\"['/']\">\n            <ion-icon  slot=\"start\"  name=\"heart-outline\" detail></ion-icon>\n            <ion-label>\n              <p>Saved Items</p>\n            </ion-label>\n          </ion-item>\n\n          <ion-item [routerLink]=\"['/settings']\" >  \n            <ion-icon slot=\"start\" name=\"people-outline\"></ion-icon>\n            <ion-label>\n              <p>Community</p>\n            </ion-label>\n          </ion-item>\n\n          <ion-item [routerLink]=\"['/']\">\n            <ion-icon slot=\"start\" name=\"pricetag-outline\" detail></ion-icon>\n            <ion-label>\n              <p>Deals</p>\n            </ion-label>\n          </ion-item>\n\n          <ion-item [routerLink]=\"['/']\">\n            <ion-icon slot=\"start\"  name=\"notifications-outline\" detail></ion-icon>\n            <ion-label>\n              <p>Notification</p>\n            </ion-label>\n          </ion-item>\n      \n          <ion-item [routerLink]=\"['/']\"> \n            <ion-icon slot=\"start\"  name=\"information-circle-outline\" detail></ion-icon>\n            <ion-label>\n              <p>Support</p>\n            </ion-label>\n          </ion-item>\n          <ion-item [routerLink]=\"['/']\">\n            <ion-icon  slot =\"start\" name=\"bag-add-outline\" detail></ion-icon>\n            <ion-label>\n              <p>Help Center</p>\n            </ion-label>\n          </ion-item>\n\n          <ion-item [routerLink]=\"['/settings']\" >  \n            <ion-icon slot=\"start\" name=\"people-outline\"></ion-icon>\n            <ion-label>\n              <p>Terms & Services</p>\n            </ion-label>\n          </ion-item>\n\n          <ion-item (click)=\"signOut()\">\n            <ion-icon  slot =\"start\" name=\"log-out-outline\" detail></ion-icon>\n            <ion-label>\n              <p>Logout</p>\n            </ion-label>\n          </ion-item>\n\n        </ion-list>\n      </ion-col>\n    </ion-row>\n\n  </div>\n  <div class=\"last-section\">\n    <div class=\"app-version\">\n    Version 0.0.1\n  </div>\n  </div>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfileHomePageRoutingModule } from './profile-home-routing.module';\n\nimport { ProfileHomePage } from './profile-home.page';\nimport { ShellModule } from '../../shell/shell.module';\nimport { UserService } from '../../Services/account/user.service';\nimport { ComponentsModule } from '../../components/components.module';\nimport { FirebaseAuthService } from '../../firebase/auth/firebase-auth.service';\nimport{ProfileSettingComponent} from './profile-setting/profile-setting.component'\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,ComponentsModule,\n    ProfileHomePageRoutingModule,ShellModule,ReactiveFormsModule\n  ],\n  declarations: [ProfileHomePage,ProfileSettingComponent],\n  providers: [\n    UserService,\n    FirebaseAuthService\n  ],\n  exports:[ProfileSettingComponent]\n})\nexport class ProfileHomePageModule {}\n","import { ShellModel } from '../../../shell/data-store';\n\nexport class FirebaseSkillModel extends ShellModel {\n  id: string;\n  name: string;\n\n  constructor() {\n    super();\n  }\n}\n\nexport class FirebaseUserModel extends ShellModel {\n  id: string;\n  avatar: string;\n  name: string;\n  lastname: string;\n  email: string;\n  phone: number;\n  age?: number;\n  birthdate: number; // timestamp\n  skills: Array<any> = [\n    '',\n    '',\n    ''\n  ];\n  languages: {\n    spanish: number,\n    english: number,\n    french: number\n  } = {\n    spanish: 0,\n    english: 0,\n    french: 0\n  };\n\n  constructor() {\n    super();\n  }\n}\nexport class FirebaseCombinedUserModel extends FirebaseUserModel {\n  skills: Array<FirebaseSkillModel> = [\n    new FirebaseSkillModel(),\n    new FirebaseSkillModel(),\n    new FirebaseSkillModel()\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { ShellModel } from '../shell/data-store';\n\nexport class UserProfileModel extends ShellModel {\n  userImage: string;\n  name: string;\n  membership: string;\n  job: string;\n  likes: string;\n  followers: string;\n  following: string;\n  about: string;\n  friends: Array<{image: string, name: string}> = [\n    {\n      image: '',\n      name: ''\n    },\n    {\n      image: '',\n      name: ''\n    },\n    {\n      image: '',\n      name: ''\n    },\n    {\n      image: '',\n      name: ''\n    }\n  ];\n  photos: Array<string> = [\n    '',\n    '',\n    '',\n    ''\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { ValidatorFn, FormArray } from '@angular/forms';\n\nexport class CheckboxCheckedValidator {\n\n  static minSelectedCheckboxes(min) {\n    const validator: ValidatorFn = (formArray: FormArray) => {\n      const totalSelected = formArray.controls\n        // get a list of checkbox values (boolean)\n        .map(control => control.value)\n        // total up the number of checked checkboxes\n        .reduce((prev, next) => next ? prev + next : prev, 0);\n\n      // if the total is not greater than the minimum, return the error message\n      return totalSelected >= min ? null : { required: true };\n    };\n\n    return validator;\n  }\n}\n"]}