{"version":3,"sources":["webpack:///src/app/pages/item/Item-Model.ts","webpack:///src/app/pages/item/item.component.html","webpack:///src/app/pages/item/item.component.ts","webpack:///src/app/pages/tabs/tabs-routing.module.ts","webpack:///src/app/pages/tabs/tabs.page.ts","webpack:///src/app/pages/tabs/tabs.page.html","webpack:///src/app/pages/tabs/tabs.module.ts","webpack:///src/app/pages/item/Item-service.ts"],"names":["Item","ItemComponent","modalController","actionSheetController","plt","imagePicker","loadingCtrl","itemService","formBuilder","toastCtrl","alertCtrl","viewEntered","coverImage","images","imageUrls","showError","formFinish","errorMsg","base64Images","slidesOptions","zoom","toggle","itemForm","group","postType","itemTitle","required","cat","subCat","condition","desc","price","firmOnPrice","address","brand","color","size","madeIn","canDeliver","item","dismiss","then","$evnt","push","console","log","slides","getActiveIndex","index","slideNext","buttons","text","icon","handler","addImage","Camera","Photos","is","fileInput","nativeElement","click","create","header","actionSheet","present","options","outputType","DATA_URL","getPictures","result","err","source","getPhoto","quality","allowEditing","resultType","DataUrl","patchValue","coverImg","msg","show","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","length","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","blob","Blob","type","maximumImagesCount","results","base64Image","message","loading","addNewItem","value","res","duration","toast","alert","dismissModal","routes","path","component","children","loadChildren","m","Tab1PageModule","Tab2PageModule","Tab3PageModule","redirectTo","pathMatch","TabsPageRoutingModule","forChild","TabsPage","router","currentModal","animated","mode","swipeToClose","modal","navigateByUrl","createItemModal","profileClick","TabsPageModule","ItemFireStore","afs","afAuth","storage","imagesUrl","currentUser","poster","uid","documentId","collection","add","ref","id","startUpload","storageRef","child","task","putString","snapshot","snapshotChanges","pipe","getDownloadURL","toPromise","downloadURL","addImg","img","doc","update","FieldValue","arrayUnion"],"mappings":"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","file":"pages-tabs-tabs-module-es5.js","sourcesContent":["export class Item {\n  id: string;\n  postType: string;\n  poster: string;\n  date: string;\n  price:number;\n  firmOnPrice:boolean\n  address:string;\n  coverImg: string;\n  canDeliver:boolean;\n  Gallary?: [];\n  itemTitle?: string;\n  cat: string; // timestamp\n  subCat: string\n  condition:string\n  desc :string;\n  brand:string;\n  color:string;\n  size:string;\n  madeIn:string\n}","\n<ion-header class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-title>Post an Item</ion-title>\n    <ion-buttons slot=\"start\">\n      <ion-button mode=\"ios\" (click)=\"dismissModal()\" >\n        <ion-icon class=\"ion-icon-close\" name=\"close\" color=\"primary\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <form [formGroup]=\"itemForm\">\n  <ion-slides pager=\"false\" [options]=\"slidesOptions\" *ngIf=\"viewEntered\">\n    <!-- step 1 -->\n    <ion-slide>\n   \n        <ion-toggle [(ngModel)]=\"item.postType\" formControlName=\"postType\" hidden=true></ion-toggle>\n      <ion-grid>\n        <ion-row>\n          <ion-col size=\"12\">\n            <h4>What is your post for</h4>\n          </ion-col>\n          <ion-col size=\"6\">\n            <ion-card class=\"step1-ion-card\"\n              (click)=\"selectSaleType()\"\n              [color]=\"item.postType==1 ? 'primary' : ''\"\n              button\n              ion-activatable\n              ripple-parent\n              mode=\"ios\"\n            >\n              <ion-card-content>\n                <div class=\"post-type\">\n                  <h2>For Sale</h2>\n                </div>\n              </ion-card-content>\n            </ion-card>\n          </ion-col>\n          <ion-col size=\"6\" ion-activatable ripple-parent>\n            <ion-card mode=\"ios\" class=\"step1-ion-card\"\n              [color]=\"item.postType==0 ? 'primary' : ''\"\n              button\n              (click)=\"selectRentType()\"\n            >\n              <ion-card-content>\n                <div class=\"post-type\">\n                  <h2>For Rent</h2>\n                </div>\n              </ion-card-content>\n            </ion-card>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n\n    </ion-slide>\n    <!-- step 2 -->\n    \n    <ion-slide>\n   \n      <ion-grid>\n        <ion-row>\n         <ion-col size=\"12\">\n          <h4>Add Item Photo</h4>\n         </ion-col>\n          <ion-col size=\"6\">\n            <ion-card mode=\"ios\" class=\"step2-ion-card\" (click)=\"pickSinglemage()\"\n              color=\"primary\"\n              button\n              ion-activatable\n              ripple-parent\n            >\n            <img  *ngIf=\"coverImage\" class=\"cover-img\"   [src]=\"images[0] ? 'url(' + images[0] + ')' : ''\">\n              <div class=\"content\">\n                <ion-icon\n                  class=\"ion-icon-camera\"\n                  name=\"camera-outline\"\n                ></ion-icon>\n              </div>\n              <p>Add cover image</p> \n            </ion-card>\n          </ion-col>\n          <ion-col size=\"6\" ion-activatable ripple-parent>\n            <ion-card mode=\"ios\" class=\"step2-ion-card\"\n              [color]=\"forRent ? 'primary' : ''\"\n              button\n              (click)=\"pickMultipleImages()\"\n            >\n              <div class=\"content\">\n                <ion-icon class=\"ion-icon-camera\" name=\"add\"></ion-icon>\n                <p>Add photo</p>\n              </div>\n              <p>Add up to 6 photos</p>\n            </ion-card>\n          </ion-col>\n        </ion-row>\n        <ion-row class=\"img-row\">\n          <ion-col size=\"3\" *ngFor=\"let image of images\">\n\n            <upload-task [file]=\"image\" (urlEventEmitter)=\"urlEventHander($event)\"></upload-task>\n            <ion-card class=\"imgs-ion-card\" ion-activatable ripple-parent button (click)=\"imgEdit()\">\n              <img [src]=\"image\" alt=\"image\">\n            </ion-card>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </ion-slide>\n\n    <!-- step 2 -->\n    <ion-slide>\n     \n      <ion-row>\n      <ion-col size=\"12\">\n        <h4>Item Detail</h4>\n      </ion-col>\n        <ion-col size=\"12\">\n          <ion-item class=\"input-item\">\n            <ion-label color=\"primary\" position=\"floating\">Itenm Name</ion-label>\n            <ion-input type=\"text\" required formControlName=\"itemTitle\" [(ngModel)]=\"item.itemTitle\"></ion-input>\n          </ion-item>\n        </ion-col>\n\n        <ion-col size=\"12\">\n          <ion-item class=\"input-item\">\n            <ion-label color=\"primary\" position=\"floating\">Category</ion-label>\n            <ion-select interface=\"action-sheet\" class=\"custom-options\" formControlName=\"cat\" [(ngModel)]=\"item.cat\">\n              <ion-select-option value=\"brown\">Brown</ion-select-option>\n              <ion-select-option value=\"blonde\">Blonde</ion-select-option>\n              <ion-select-option value=\"black\">Black</ion-select-option>\n              <ion-select-option value=\"red\">Red</ion-select-option>\n            </ion-select>\n          </ion-item>\n        </ion-col>\n        <ion-col size=\"12\">\n          <ion-item class=\"input-item\">\n            <ion-label color=\"primary\" position=\"floating\">SubCategory</ion-label>\n            <ion-select interface=\"action-sheet\" class=\"custom-options\" formControlName=\"subCat\" [(ngModel)]=\"item.SubCategory\">\n              <ion-select-option value=\"brown\">Brown</ion-select-option>\n              <ion-select-option value=\"blonde\">Blonde</ion-select-option>\n              <ion-select-option value=\"black\">Black</ion-select-option>\n              <ion-select-option value=\"red\">Red</ion-select-option>\n            </ion-select>\n          </ion-item>\n        </ion-col>\n        <ion-col size=\"12\">\n          <ion-item class=\"input-item\">\n            <ion-label color=\"primary\" position=\"floating\">Condition</ion-label>\n            <ion-select interface=\"action-sheet\" class=\"custom-options\" formControlName=\"condition\" [(ngModel)]=\"item.condtion\">\n              <ion-select-option value=\"brown\">Brown</ion-select-option>\n              <ion-select-option value=\"blonde\">Blonde</ion-select-option>\n              <ion-select-option value=\"black\">Black</ion-select-option>\n              <ion-select-option value=\"red\">Red</ion-select-option>\n              <ion-select-option value=\"brown\">Brown</ion-select-option>\n              <ion-select-option value=\"blonde\">Blonde</ion-select-option>\n              <ion-select-option value=\"black\">Black</ion-select-option>\n              <ion-select-option value=\"red\">Red</ion-select-option>\n              <ion-select-option value=\"brown\">Brown</ion-select-option>\n              <ion-select-option value=\"blonde\">Blonde</ion-select-option>\n              <ion-select-option value=\"black\">Black</ion-select-option>\n              <ion-select-option value=\"red\">Red</ion-select-option>\n              <ion-select-option value=\"brown\">Brown</ion-select-option>\n              <ion-select-option value=\"blonde\">Blonde</ion-select-option>\n              <ion-select-option value=\"black\">Black</ion-select-option>\n              <ion-select-option value=\"red\">Red</ion-select-option>\n              <ion-select-option value=\"brown\">Brown</ion-select-option>\n              <ion-select-option value=\"blonde\">Blonde</ion-select-option>\n              <ion-select-option value=\"black\">Black</ion-select-option>\n              <ion-select-option value=\"red\">Red</ion-select-option>\n            </ion-select>\n          </ion-item>\n        </ion-col>\n        <ion-col size=\"12\">\n          <ion-item class=\"input-item\">\n            <ion-label color=\"primary\" position=\"floating\">Detail Description</ion-label>\n            <ion-textarea rows=\"4\" cols=\"20\" requred=true formControlName=\"desc\" [(ngModel)]=\"item.desc\"></ion-textarea>\n          </ion-item>\n        </ion-col>\n        <ion-col size=\"12\">\n          <ion-item class=\"input-item\">\n            <ion-label color=\"primary\" position=\"floating\">Brand</ion-label>\n            <ion-input type=\"text\" formControlName=\"brand\" [(ngModel)]=\"item.brand\"></ion-input>\n          </ion-item>\n        </ion-col>\n        <ion-col size=\"12\">\n          <ion-item class=\"input-item\">\n            <ion-label color=\"primary\" position=\"floating\">Size</ion-label>\n            <ion-input type=\"text\"  formControlName=\"size\" [(ngModel)]=\"item.size\"></ion-input>\n          </ion-item>\n        </ion-col>\n        <ion-col size=\"12\">\n          <ion-item class=\"input-item\">\n            <ion-label color=\"primary\" position=\"floating\">Color</ion-label>\n            <ion-select interface=\"action-sheet\" class=\"custom-options\" formControlName=\"color\" [(ngModel)]=\"item.color\">\n              <ion-select-option value=\"brown\">Brown</ion-select-option>\n              <ion-select-option value=\"blonde\">Blonde</ion-select-option>\n              <ion-select-option value=\"black\">Black</ion-select-option>\n              <ion-select-option value=\"red\">Red</ion-select-option>\n            </ion-select>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n    </ion-slide>\n\n  <!-- Step 4  -->\n\n  <ion-slide>\n\n    <ion-row>\n   <ion-col size=\"12\">\n    <h4>Price</h4>\n   </ion-col>\n      <ion-col size=\"12\">\n        <ion-item lines =\"none\">\n        <ion-input formControlName=\"price\" [(ngModel)]=\"item.price\" class=\"price-ion-input\" hint=\"decimal\" type=\"number\" inputmode=\"decimal\"  clearOnEdit=\"true\" clear-input=\"true\"></ion-input>\n      </ion-item>\n            </ion-col>\n           <ion-col>\n            <ion-item lines=\"none\">\n              <span slot=\"start\">Firm on Price</span>\n              <ion-toggle slot=\"end\" formControlName=\"firmOnPrice\" [(ngModel)]=\"item.firmOnPrice\"></ion-toggle>\n            </ion-item>\n           </ion-col>\n    </ion-row>\n\n  </ion-slide>\n\n<!-- step 5 last -->\n\n<ion-slide>\n \n  <ion-row>\n   <ion-col size=\"12\">\n    <h4>Item address </h4>\n   </ion-col>\n    <ion-col size=\"12\">\n      <ion-item>\n        <ion-label position=\"stacked\">item address</ion-label>\n        <ion-input formControlName=\"address\" [(ngModel)]=\"item.address\" type=\"text\" clear-input=\"true\" value=\"Richardson TX\"></ion-input>\n      </ion-item>\n          </ion-col>\n\n          <ion-col size=\"12\">\n            <ion-item lines=\"none\">\n              <span slot=\"start\">Do you deliver the item</span>\n              <ion-toggle slot=\"end\" formControlName=\"canDeliver\"  [(ngModel)]=\"item.canDeliber\" ></ion-toggle>\n            </ion-item>\n          </ion-col>\n  </ion-row>\n</ion-slide>\n</ion-slides>\n</form>\n</ion-content>\n<ion-footer>\n  <ion-toolbar>\n    <!-- <ion-row>\n      <ion-col class=\"step-ion-col\">\n        <ion-chip [color]=\"step1 ? 'primary' : 'light'\">\n          <ion-label>1.Type </ion-label>\n        </ion-chip>\n      </ion-col>\n\n      <ion-col class=\"step-ion-col\">\n        <ion-chip [color]=\"step2 ? 'primary' : 'light'\">\n          <ion-label>2.Photo</ion-label>\n        </ion-chip>\n      </ion-col>\n      <ion-col class=\"step-ion-col\">\n        <ion-chip [color]=\"step3 ? 'primary' : 'light'\">\n          <ion-label>3.Detail</ion-label>\n        </ion-chip>\n      </ion-col>\n      <ion-col class=\"step-ion-col\">\n        <ion-chip [color]=\"step4 ? 'primary' : 'light'\">\n          <ion-label>4.Price</ion-label>\n        </ion-chip>\n      </ion-col>\n      <ion-col class=\"step-ion-col\">\n        <ion-chip [color]=\"step5 ? 'primary' : 'light'\">\n          <ion-label>5.Finish </ion-label>\n        </ion-chip>\n      </ion-col>\n    </ion-row> -->\n    <ion-col size=\"12\" *ngIf=\"!formFinish\">\n      <ion-button color=\"primary\" expand=\"block\" (click)=\"next()\">\n        Next\n      </ion-button>\n    </ion-col>\n    <ion-col size=\"12\" *ngIf=\"formFinish\">\n      <ion-button color=\"primary\" expand=\"block\" (click)=\"saveItem()\">\n        Post\n      </ion-button>\n    </ion-col>\n  </ion-toolbar>\n</ion-footer>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Camera, CameraResultType, CameraSource } from '@capacitor/core';\nimport { ActionSheetController, AlertController, IonSlides, LoadingController, ModalController, Platform, ToastController } from '@ionic/angular';\nimport { ImagePicker,ImagePickerOptions, OutputType} from '@ionic-native/image-picker/ngx';\nimport { Item } from './Item-Model';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ItemFireStore } from './Item-service';\n@Component({\n  selector: 'app-item',\n  templateUrl: './item.component.html',\n  styleUrls: ['./item.component.scss'],\n})\nexport class ItemComponent implements OnInit {\n  @ViewChild(IonSlides, { static: false }) slides: IonSlides;\n\nviewEntered = false;\ncoverImage = null;\nimages: any[] = [];\nimageUrls : any[] = [];\nshowError = false\nformFinish = false;\nerrorMsg=\"\"\nitem: any ;\nbase64Images =[];\npublic itemForm: FormGroup;\n\n@ViewChild('fileInput', { static: false }) fileInput: ElementRef;\n  slidesOptions: any = {\n    zoom: {\n      toggle: false // Disable zooming to prevent weird double tap zomming on slide images\n    }\n  };\n  constructor(\n    private modalController:ModalController,\n    private actionSheetController : ActionSheetController,\n    private plt: Platform,\n    private imagePicker :ImagePicker,\n    private loadingCtrl:LoadingController,\n    private itemService :ItemFireStore,\n    private formBuilder : FormBuilder,\n    private toastCtrl: ToastController,\n    private alertCtrl :AlertController\n    \n    ) { }\n\n  ngOnInit() {\n    this.itemForm = this.formBuilder.group({\n      postType: [''],\n      itemTitle: ['' , Validators.required],\n      cat: [''],\n      subCat: [''],\n      condition: ['' , Validators.required],\n      desc: ['' , Validators.required],\n      price: ['' , Validators.required],\n      firmOnPrice: [''],\n      address: ['' , Validators.required],\n      brand: [''],\n      color: [''],\n      size: [''],\n      madeIn: [''],\n      canDeliver:[''],\n    });\n   this.item = new Item();\n\n  }\n\n  ionViewDidEnter() {\n    this.viewEntered = true;\n}\n\n  dismissModal() {\n    if (this.modalController) {\n      this.modalController.dismiss().then(() => { this.modalController = null; });\n    }\n  }\n  \n  urlEventHander($evnt: any) {\n    this.imageUrls.push = $evnt;\n    console.log(\"::::::::::Event Emitted ::::::::: \" +$evnt)\n  }\n\n\n  async next() {\n    \n    this.slides.getActiveIndex().then(index => {\n      console.log(index);\n      if(index==3 ){\n      this.formFinish = true;\n      }\n   });\n    this.slides.slideNext();\n   }\n\nselectSaleType(){\n  this.item.postType = 1;\n\n}\nselectRentType(){\n  this.item.postType = 0;\n}\n\nselectCoverPhoto(){\n\n}\n\nasync selectImageSource() {\n  const buttons = [\n    {\n      text: 'Take Photo',\n      icon: 'camera',\n      handler: () => {\n        this.addImage(CameraSource.Camera);\n      }\n    },\n    {\n      text: 'Choose From Photos',\n      icon: 'image',\n      handler: () => {\n        this.addImage(CameraSource.Photos);\n      }\n    }\n  ];\n\n  // Only allow file selection inside a browser\n  if (!this.plt.is('hybrid')) {\n    buttons.push({\n      text: 'Choose a File',\n      icon: 'attach',\n      handler: () => {\n        this.fileInput.nativeElement.click();\n      }\n    });\n  }\n\n  const actionSheet = await this.actionSheetController.create({\n    header: 'Select Image Source',\n    buttons\n  });\n  await actionSheet.present();\n}\n\nasync pickSinglemage(){\n  var options: ImagePickerOptions ={\n    outputType:OutputType.DATA_URL,\n  }\n  this.imagePicker.getPictures(options).then((result) => {\n    this.coverImage = 'data:image/jpeg;base64,' + result;\n    this.images[0].push(this.coverImage);\n  }, (err) => {console.log(err) });\n}\n\nasync addImage(source: CameraSource) {\n    await Camera.getPhoto({\n    quality: 60,\n    allowEditing: true,\n    resultType: CameraResultType.DataUrl,\n    source\n  }).then((result) => {\n    this.coverImage = 'data:image/jpeg;base64,' + result;\n    this.itemForm.patchValue({ coverImg: result });\n  },(err) => { console.log(err)});\n\n}\nshowErrorMsg( msg, show){\n  this.showError = true;\n  this.errorMsg = msg;\n\n}\n\nb64toBlob(b64Data, contentType = '', sliceSize = 512) {\n  const byteCharacters = atob(b64Data);\n  const byteArrays = [];\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n    const slice = byteCharacters.slice(offset, offset + sliceSize);\n\n    const byteNumbers = new Array(slice.length);\n    for (let i = 0; i < slice.length; i++) {\n      byteNumbers[i] = slice.charCodeAt(i);\n    }\n\n    const byteArray = new Uint8Array(byteNumbers);\n    byteArrays.push(byteArray);\n  }\n\n  const blob = new Blob(byteArrays, { type: contentType });\n  return blob;\n}\n\npickMultipleImages(){\n  var options: ImagePickerOptions ={\n    maximumImagesCount:6,\n    outputType:OutputType.DATA_URL,\n  }\n  this.imagePicker.getPictures(options).then((results) => {\n    for (var i = 1; i < results.length; i++) {\n      //let filename = results[i].\n        let base64Image = 'data:image/jpeg;base64,' + results[i];\n        this.base64Images.push(base64Image);\n        this.images.push(results[i]);\n    }\n  }, (err) => { });\n}\n\n\n\n\nasync imgEdit() {\n  const buttons = [\n    {\n      text: 'Set as cover photo',\n      handler: () => {\n        //this.addImage(CameraSource.Camera);\n      }\n    },\n    {\n      text: 'Edit',\n      handler: () => {\n\n      }\n    },\n    {\n      text: 'Delete',\n      handler: () => {\n      }\n    },\n    {\n      text: 'Cancel',\n      handler: () => {\n\n      }\n    }\n  ];\n\n  const actionSheet = await this.actionSheetController.create({\n    buttons\n  });\n  await actionSheet.present();\n}\n\n\nasync saveItem() {\n  let loading = await this.loadingCtrl.create({\n    message: \"loading...\",\n  });\n  await loading.present();\n  this.itemService.addNewItem(this.itemForm.value , this.images).then(\n    async (res) => {\n      loading.dismiss();\n      let toast = await this.toastCtrl.create({\n        duration: 3000,\n        message: \"Successfully Posted new Item!\",\n      });\n      toast.present();\n      console.log(\"finished: \", res);\n    },\n    async (err) => {\n      await loading.dismiss();\n\n      let alert = await this.alertCtrl.create({\n        header: \"Error\",\n        message: err.message,\n        buttons: [\"OK\"],\n      });\n      alert.present();\n    }\n  );\n}\n\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { TabsPage } from './tabs.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TabsPage,\n    children: [\n      {\n        path: 'tab1',\n        loadChildren: () => import('../tab1/tab1.module').then(m => m.Tab1PageModule),\n      },\n      {\n        path: 'tab2',\n        loadChildren: () => import('../tab2/tab2.module').then(m => m.Tab2PageModule)\n      },\n      {\n        path: 'tab3',\n        loadChildren: () => import('../tab3/tab3.module').then(m => m.Tab3PageModule)\n      },\n      {\n        path: '',\n        redirectTo: '/home/tab1',\n        pathMatch: 'full'\n      }\n    ]\n  },\n  {\n    path: '',\n    redirectTo: '/tabs/tab1',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n})\nexport class TabsPageRoutingModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { createAnimation, ModalController } from '@ionic/angular';\nimport { ItemComponent } from '../item/item.component';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: 'tabs.page.html',\n  styleUrls: ['tabs.page.scss']\n})\nexport class TabsPage {\n\n  constructor(private modalController:ModalController,private router: Router) {}\n  currentModal = null;\n \n\n    async createItemModal() {\n    const modal = await this.modalController.create({\n      component: ItemComponent,\n      animated:true,\n      mode:'ios',\n      swipeToClose:true\n\n    });\n\n    await modal.present();\n    this.currentModal = modal;\n  \n  }\n\n\n\n  profileClick(){\n    this.router.navigateByUrl('/profile');\n  }\n\nchatsClicked(){\n  this.router.navigateByUrl('/chats')\n}\n\n}\n","\n<ion-tabs>\n  <ion-tab-bar slot=\"bottom\" [translucent]=\"true\">\n    <ion-tab-button tab=\"tab1\" layout=\"icon-top\">\n      <ion-icon name=\"home\"></ion-icon>\n      <ion-label>Home</ion-label>\n    </ion-tab-button>\n\n    <ion-tab-button layout=\"icon-top\" tab=\"chats\">\n      <ion-icon name=\"chatbubble-ellipses-outline\"></ion-icon>\n      <ion-label>Inbox</ion-label>\n    </ion-tab-button>\n\n    <ion-fab-button (click)=\"createItemModal()\">\n      <ion-icon name=\"camera-outline\"></ion-icon>\n    </ion-fab-button>\n\n    <ion-tab-button tab=\"selling\" layout=\"icon-top\">\n      <ion-icon name=\"pricetags-outline\"></ion-icon>\n      <ion-label>Selling</ion-label>\n    </ion-tab-button>\n\n    <ion-tab-button (click)=\"profileClick()\"  layout=\"icon-top\">\n      <ion-icon name=\"person\"></ion-icon>\n      <ion-label>Account</ion-label>\n    </ion-tab-button>\n  </ion-tab-bar>\n\n</ion-tabs>\n\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { TabsPageRoutingModule } from './tabs-routing.module';\nimport { TabsPage } from './tabs.page';\nimport { FirebaseAuthService } from '../../firebase/auth/firebase-auth.service';\nimport { ItemComponent } from '../item/item.component';\nimport { ItemService } from '../../Services/account/item-service';\nimport { ItemFireStore } from '../item/Item-service';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    TabsPageRoutingModule,ReactiveFormsModule\n  ],\n  declarations: [TabsPage,ItemComponent],\n  providers: [FirebaseAuthService,ItemService,ItemFireStore],\n  exports:[ItemComponent]\n})\nexport class TabsPageModule {}\n","import { Injectable } from \"@angular/core\";\nimport { AngularFireAuth } from \"@angular/fire/auth\";\nimport { AngularFirestore } from \"@angular/fire/firestore\";\nimport { AngularFireStorage, AngularFireStorageReference, AngularFireUploadTask } from '@angular/fire/storage';\nimport { Observable } from \"rxjs/internal/Observable\";\nimport { finalize } from \"rxjs/internal/operators/finalize\";\nimport { tap } from \"rxjs/internal/operators/tap\";\nimport * as firebase from \"firebase/app\";\n@Injectable()\nexport class ItemFireStore {\n\n    images: any[] =[]\n    task: AngularFireUploadTask;\n    snapshot: Observable<any>;\n    downloadURL: string;\n  constructor(\n    private afs: AngularFirestore,\n    private afAuth: AngularFireAuth,\n    private storage: AngularFireStorage\n  ) {}\n\n//   async addNewItem(item,imagesUrl: any[]) {\n//     console.log(item);\n//     item.poster = (await this.afAuth.currentUser).uid;\n//     item.images = imagesUrl;\n//     let documentId = null;\n//     return this.afs.collection('items').add(item).then(ref=>{\n//         documentId = ref.id;\n//         for(var i=0;i<imagesUrl.length;i++){\n//             this.uploadImage(imagesUrl[i],documentId);\n//         }\n//     });\n\n    \n//     .then(ref => {\n//       console.log('ref: ', ref);\n//       documentId = ref.id;\n//       storageRef = this.storage.ref(`items/${documentId}`);\n\n//         const uploadTask = storageRef.putString(coverImg, 'base64', { contentType: 'image/png'});\n//         return uploadTask;      \n\n//     }).then(task => {\n//       console.log('task: ', task);\n//       if(coverImg){\n//       return storageRef.getDownloadURL().toPromise();\n//       }\n//     }).then(imageUrl => {\n\n//       console.log('got url: ', imageUrl);\n//       if(coverImg){\n//       return this.afs.doc(`items/${documentId}`).update({ img: imageUrl });\n//       }else{\n//         return;\n//       }\n//     });\n  \n//   }\n\n\n async addNewItem(item,imagesUrl: any[]) {\n    console.log(item);\n    item.poster = (await this.afAuth.currentUser).uid;\n    item.images = [];\n    let documentId = null;\n    return this.afs.collection('items').add(item).then(ref => {\n        console.log('ref: ', ref);\n        documentId = ref.id;  \n        for(var i=0;i<imagesUrl.length;i++){\n            this.startUpload(documentId,imagesUrl[i],i);\n        }\n    })\n}\nstartUpload(documentId, images:any[],index) {\n\n    // The storage path\n    //const path = `test/${Date.now()}_${this.file.name}`;\n    // Reference to storage bucket\n    //const ref = this.storage.ref(path);\n    let storageRef: AngularFireStorageReference = null;\n    storageRef = this.storage.ref(`items/${documentId}`).child(index);\n    this.task = storageRef.putString(images[0], 'base64', { contentType: 'image/png'});\n    \n\n\n    // The main task\n   // this.task = this.storage.upload(path, this.file);\n\n    // Progress monitoring\n   // this.percentage = this.task.percentageChanges();\n\n    this.snapshot   = this.task.snapshotChanges().pipe(\n      tap(console.log),\n      // The file's download URL\n      finalize( async() =>  {\n        this.downloadURL = await storageRef.getDownloadURL().toPromise();\n        //this.afs.doc(`items/${documentId}`).update({ imgages: firebase.firestore.FieldValue.arrayUnion(this.downloadURL) });\n        //this.afs.collection('items').add( { downloadURL: this.downloadURL, path });\n        this.addImg(documentId,this.downloadURL);\n      }),\n    );\n  }\n  \n  public addImg(id,img) {\n    this.afs\n      .collection(\"items\")\n      .doc(id).ref\n      .update({\n        images: firebase.firestore.FieldValue.arrayUnion(img),\n      });\n  }\n\n\n  \n}"]}