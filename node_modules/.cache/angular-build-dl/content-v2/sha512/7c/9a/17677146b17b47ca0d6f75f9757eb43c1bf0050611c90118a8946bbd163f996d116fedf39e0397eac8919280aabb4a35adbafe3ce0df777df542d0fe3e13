{"version":3,"sources":["./src/app/pages/chat-list/chat-list.module.ts","./src/app/pages/chat-list/chat-list.page.ts","./src/app/pages/chat-list/chat-list.page.html","./src/app/pages/chat-list/chat-list-routing.module.ts"],"names":[],"mappings":"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","file":"pages-chat-list-chat-list-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChatListPageRoutingModule } from './chat-list-routing.module';\n\nimport { ChatListPage } from './chat-list.page';\nimport { ItemService } from '../../Services/account/item-service';\nimport { ComponentsModule } from '../../components/components.module';\nimport { ChatService } from '../chat-detail/chat-service';\nimport { MomentModule } from 'ngx-moment';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ChatListPageRoutingModule,\n    ComponentsModule,\n    MomentModule.forRoot({\n      relativeTimeThresholdOptions: {\n        'm': 59\n      }\n    }),\n\n  ],\n  declarations: [ChatListPage],\n  providers:[ItemService,ChatService]\n})\nexport class ChatListPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { forkJoin } from 'rxjs';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { from } from 'rxjs/internal/observable/from';\nimport { ItemService } from '../../Services/account/item-service';\nimport { ChatService } from '../chat-detail/chat-service';\n\n@Component({\n  selector: 'app-chat-list',\n  templateUrl: './chat-list.page.html',\n  styleUrls: ['./chat-list.page.scss','./chat-list.page.ios.scss'],\n})\nexport class ChatListPage implements OnInit {\n\n  chats: any[];\n  chatsForDisplay: any[] = [];\n\n  messages :Observable<any> ;\n  sent : Observable<any>\n  received: Observable<any>;\n\n  rangeForm: FormGroup;\n  searchQuery: string;\n  showAgeFilter = false;\n  currentUser = null;\n  constructor(\n    private chatService : ChatService,\n    private router :Router\n  ) { }\n\n  ngOnInit() {\n\n    // return combineLatest<any[]>(received, sent).pipe(\n    //   map((arr) => arr.reduce((acc, cur) => acc.concat(cur)))\n    // );\n\n    this.chatService.getCurrentUser().subscribe(user=>{\n      this.currentUser=user.uid\n      this.chatService.getAllReceiveMsgs(user.uid).subscribe(msgs=>{\n       console.log('MSGGG FOREACH=='+JSON.stringify(msgs));\n        this.chats = msgs\n        console.log('MESSAGE for user '+user.uid+' ======= '+JSON.stringify(msgs))\n     });\n    });\n\n  }\n\n  chatUser(chat){\n    if(chat.sender.uid==this.currentUser){\n      chat.item.poster = chat.receiver;\n    }\n    if(chat.receiver.uid==this.currentUser){\n      chat.item.poster = chat.sender;\n    }\n    console.log('CHAT DETAIL ++++++++++++++ '+JSON.stringify(chat))\n    this.router.navigate([\"/redmarket/chat/detail\",{  item: JSON.stringify( chat.item),chatId:chat.chatId,routedFromChatList : true }])\n  }\n}\n\n","<ion-header [translucent]=\"true\" class=\"ion-no-border\">\n  <ion-toolbar>\n\n      <ion-buttons slot=\"start\">\n        <ion-back-button defaultHref=\"/redmarket/items\" mode=\"md\">\n        </ion-back-button>\n      </ion-buttons>\n\n    <ion-title >Chats</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"firebase-listing-content\">\n  <ion-list class=\"items-list\" lines=\"full\">\n    <ion-item class=\"list-item\" *ngFor=\"let chat of chats\" button mode=\"ios\">\n      <ion-row class=\"user-row\" (click)=\"chatUser(chat)\">\n        <ion-col size=\"2.5\" class=\"user-image-wrapper\">\n\n          <img  *ngIf=\"chat.sender.uid==currentUser \" class=\"user-img\" [src]=\"chat?.receiver.img\" [alt]=\"'item image'\">\n          <img *ngIf=\"chat.receiver.uid==currentUser\"  class=\"user-img\" [src]=\"chat?.sender.img \" [alt]=\"'item image'\">\n          <!-- <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n            <app-image-shell class=\"user-image\" animation=\"spinner\" [src]=\"chat?.sender.img\" [alt]=\"'item image'\"></app-image-shell>\n          </app-aspect-ratio> -->\n        </ion-col>\n        <ion-col class=\"user-data-wrapper\">\n          <div class=\"user-info\">\n            <h3 class=\"user-name\" *ngIf=\"chat?.sender.uid==currentUser\">\n              {{chat?.receiver?.name}}\n            </h3>\n\n            <h3 class=\"user-name\"  *ngIf=\"chat?.receiver.uid==currentUser\">\n              {{ chat?.sender?.name}}\n            </h3>\n\n            <div class=\"lst-msg\">{{chat?.lmsg}}</div>\n            <p color=\"light\">{{chat?.created?.seconds *1000 | amTimeAgo}} </p>\n          </div>\n        </ion-col>\n        <ion-col size=\"2.5\">\n          <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n            <app-image-shell class=\"user-image\" animation=\"spinner\" [src]=\"chat?.item.img\" [alt]=\"'item image'\"></app-image-shell>\n          </app-aspect-ratio>\n        </ion-col>\n      </ion-row>\n    </ion-item>\n  </ion-list>\n  <h3 *ngIf=\"!chats\" class=\"empty-list-message\">\n    No users found for the selected filters.\n  </h3>\n</ion-content>\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChatListPage } from './chat-list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChatListPage\n  },\n  {\n    path: 'detail',\n    loadChildren: () => import('../chat-detail/chat-detail.module').then( m => m.ChatDetailPageModule)\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChatListPageRoutingModule {}\n"],"sourceRoot":"webpack:///"}