{"version":3,"sources":["./src/app/firebase/auth/sign-up/firebase-sign-up.page.ts","./src/app/firebase/auth/sign-up/firebase-sign-up.page.html","./src/app/firebase/auth/sign-up/firebase-sign-up.module.ts","./src/app/validators/password.validator.ts"],"names":[],"mappings":"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","file":"default~app-firebase-auth-sign-up-firebase-sign-up-module~sign-up-firebase-sign-up-module-es2015.js","sourcesContent":["import { Component, OnInit, NgZone } from '@angular/core';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { Location } from '@angular/common';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MenuController, LoadingController } from '@ionic/angular';\nimport { PasswordValidator } from '../../../validators/password.validator';\nimport { FirebaseAuthService } from '../firebase-auth.service';\nimport { Subscription } from 'rxjs';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport * as firebase from \"firebase/app\";\nimport { Console } from 'node:console';\n\n@Component({\n  selector: 'app-firebase-sign-up',\n  templateUrl: './firebase-sign-up.page.html',\n  styleUrls: [\n    './styles/firebase-sign-up.page.scss'\n  ]\n})\nexport class FirebaseSignUpPage implements OnInit {\n  signupForm: FormGroup;\n  matching_passwords_group: FormGroup;\n  submitError: string;\n  redirectLoader: HTMLIonLoadingElement;\n  authRedirectResult: Subscription;\n\n  validation_messages = {\n    'email': [\n      { type: 'required', message: 'Email is required.' },\n      { type: 'pattern', message: 'Enter a valid email.' }\n    ],\n    'password': [\n      { type: 'required', message: 'Password is required.' },\n      { type: 'minlength', message: 'Password must be at least 6 characters long.' }\n    ],\n    'confirm_password': [\n      { type: 'required', message: 'Confirm password is required' }\n    ],\n    'matching_passwords': [\n      { type: 'areNotEqual', message: 'Password mismatch' }\n    ]\n  };\n\n  constructor(\n    public router: Router,\n    public route: ActivatedRoute,\n    public menu: MenuController,\n    public authService: FirebaseAuthService,\n    private ngZone: NgZone,\n    public loadingController: LoadingController,\n    public location: Location,\n    private db: AngularFirestore,\n  ) {\n    this.matching_passwords_group = new FormGroup({\n      'password': new FormControl('', Validators.compose([\n        Validators.minLength(6),\n        Validators.required\n      ])),\n      'confirm_password': new FormControl('', Validators.required)\n    }, (formGroup: FormGroup) => {\n      return PasswordValidator.areNotEqual(formGroup);\n    });\n\n    this.signupForm = new FormGroup({\n      'email': new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      'matching_passwords': this.matching_passwords_group\n    });\n\n    // Get firebase authentication redirect result invoken when using signInWithRedirect()\n    // signInWithRedirect() is only used when client is in web but not desktop\n    this.authRedirectResult = this.authService.getRedirectResult()\n    .subscribe(result => {\n      if (result.error) {\n        this.manageAuthWithProvidersErrors(result.error);\n      } else {\n        //this.checkFirstTimeUser(result)\n        this.redirectLoggedUserToProfilePage(result,'');\n      }\n    });\n\n    // Check if url contains our custom 'auth-redirect' param, then show a loader while we receive the getRedirectResult notification\n    this.route.queryParams.subscribe(params => {\n      const authProvider = params['auth-redirect'];\n      if (authProvider) {\n        this.presentLoading(authProvider);\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.menu.enable(false);\n  }\n\n  // Once the auth provider finished the authentication flow, and the auth redirect completes,\n  // hide the loader and redirect the user to the profile page\n  redirectLoggedUserToProfilePage(data,mode) {\n   this.checkFirstTimeUser(data,mode);\n    this.dismissLoading();\n    // As we are calling the Angular router navigation inside a subscribe method, the navigation will be triggered outside Angular zone.\n    // That's why we need to wrap the router navigation call inside an ngZone wrapper\n    this.ngZone.run(() => {\n      // Get previous URL from our custom History Helper\n      // If there's no previous page, then redirect to profile\n      // const previousUrl = this.historyHelper.previousUrl || 'firebase/auth/profile';\n      const previousUrl = 'redmarket/profile/user';\n\n      // No need to store in the navigation history the sign-in page with redirect params (it's justa a mandatory mid-step)\n      // Navigate to profile and replace current url with profile\n      this.router.navigate([previousUrl], { replaceUrl: true });\n    });\n  }\n\n\n\n  async presentLoading(authProvider?: string) {\n    const authProviderCapitalized = authProvider[0].toUpperCase() + authProvider.slice(1);\n    this.redirectLoader = await this.loadingController.create({\n      message: authProvider ? 'Signing up with ' + authProviderCapitalized : 'Signin up ...',\n      duration: 4000\n    });\n    await this.redirectLoader.present();\n  }\n\n  async dismissLoading() {\n    if (this.redirectLoader) {\n      await this.redirectLoader.dismiss();\n    }\n  }\n\n  resetSubmitError() {\n    this.submitError = null;\n  }\n\n  // Before invoking auth provider redirect flow, present a loading indicator and add a flag to the path.\n  // The precense of the flag in the path indicates we should wait for the auth redirect to complete.\n  prepareForAuthWithProvidersRedirection(authProvider: string) {\n    this.presentLoading(authProvider);\n    this.location.go(this.location.path(), 'auth-redirect=' + authProvider, this.location.getState());\n  }\n\n  manageAuthWithProvidersErrors(errorMessage: string) {\n    this.submitError = errorMessage;\n    // remove auth-redirect param from url\n    this.location.replaceState(this.router.url.split('?')[0], '');\n    this.dismissLoading();\n  }\n\n  signUpWithEmail(): void {\n    this.resetSubmitError();\n    const values = this.signupForm.value;\n    this.authService.signUpWithEmail(values.email, values.matching_passwords.password)\n      .then(user => {\n        // navigate to user profile\n        this.redirectLoggedUserToProfilePage(user,'');\n      })\n      .catch(error => {\n        this.submitError = error.message;\n      });\n  }\n\n  doFacebookSignup(): void {\n    this.resetSubmitError();\n    this.prepareForAuthWithProvidersRedirection('facebook');\n\n    this.authService.signInWithFacebook()\n    .subscribe((result) => {\n      console.log(\"FACEBOOK USER +++++ \"+JSON.stringify(result));\n      this.checkFirstTimeUser(result,'facebook');\n \n      // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n      // const token = result.credential.accessToken;\n      this.redirectLoggedUserToProfilePage(result,'facebook');\n    }, (error) => {\n      this.manageAuthWithProvidersErrors(error.message);\n    });\n  }\n\n  doGoogleSignup(): void {\n    this.resetSubmitError();\n    this.prepareForAuthWithProvidersRedirection('google');\n\n    this.authService.signInWithGoogle()\n    .subscribe((result) => {\n      console.log(\"GOOGLE USER ++++++ \");\n      this.checkFirstTimeUser(result,'google');\n\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      // var token = result.credential.accessToken;\n      this.redirectLoggedUserToProfilePage(result,'google');\n    }, (error) => {\n        console.log(error);\n      this.manageAuthWithProvidersErrors(error.message);\n    });\n  }\n\n  doTwitterSignup(): void {\n    this.resetSubmitError();\n    this.prepareForAuthWithProvidersRedirection('twitter');\n\n    this.authService.signInWithTwitter()\n    .subscribe((result) => {\n      // This gives you a Twitter Access Token. You can use it to access the Twitter API.\n      // var token = result.credential.accessToken;\n      this.redirectLoggedUserToProfilePage(result,'');\n    }, (error) => {\n      console.log(error);\n      this.manageAuthWithProvidersErrors(error.message);\n    });\n  }\n\n  signIn(){\n    this.router.navigate([\"/redmarket/profile/auth/sign-in\"], { replaceUrl: true });\n  }\n\n\n  async checkFirstTimeUser(info,provider){\n    let profileImg = info.photoURL;\n    if(provider==='google'){\n      profileImg = profileImg.replace('s96-c', 's500-c');\n    }\n    if(provider==='facebook'){\n      profileImg = info.photoURL+'/?width=450&height=450';\n    }\n   this.db.doc(`users/${info.uid}`).get().subscribe\n   ((docSnapshot) => {\n     if (docSnapshot.exists) {\n      console.log('user exist already ! ');\n     } else {\n       this.db.doc(`users/${info.uid}`).set({\n         name: info.displayName,\n         email: info.email,\n         role: \"user\",\n         img: profileImg,\n         created: firebase.firestore.FieldValue.serverTimestamp(),\n       });\n     }\n });\n }\n}\n","<ion-header class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button></ion-back-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"signup-content\">\n  <h2 class=\"auth-title\">\n    Sign Up with Firebase\n  </h2>\n  <form [formGroup]=\"signupForm\" (ngSubmit)=\"signUpWithEmail()\">\n    <ion-list class=\"inputs-list\" lines=\"full\">\n      <ion-item class=\"input-item\">\n        <ion-input type=\"email\" placeholder=\"Email\" formControlName=\"email\" clearInput autocapitalize=\"off\" inputmode=\"email\"></ion-input>\n      </ion-item>\n      <div class=\"error-container\">\n        <ng-container *ngFor=\"let validation of validation_messages.email\">\n          <div class=\"error-message\" *ngIf=\"signupForm.get('email').hasError(validation.type) && (signupForm.get('email').dirty || signupForm.get('email').touched)\">\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n            <span>{{ validation.message }}</span>\n          </div>\n        </ng-container>\n      </div>\n\n      <div formGroupName=\"matching_passwords\">\n        <ion-item class=\"input-item\">\n          <app-show-hide-password>\n            <ion-input type=\"password\" placeholder=\"Password\" formControlName=\"password\"></ion-input>\n          </app-show-hide-password>\n        </ion-item>\n        <div class=\"error-container\">\n          <ng-container *ngFor=\"let validation of validation_messages.password\">\n            <div class=\"error-message\" *ngIf=\"signupForm.get('matching_passwords').get('password').hasError(validation.type) && (signupForm.get('matching_passwords').get('password').dirty || signupForm.get('matching_passwords').get('password').touched)\">\n              <ion-icon name=\"information-circle-outline\"></ion-icon>\n              <span>{{ validation.message }}</span>\n            </div>\n          </ng-container>\n        </div>\n\n        <ion-item class=\"input-item\">\n          <app-show-hide-password>\n            <ion-input type=\"password\" placeholder=\"Confirm Password\" formControlName=\"confirm_password\"></ion-input>\n          </app-show-hide-password>\n        </ion-item>\n        <div class=\"error-container\">\n          <ng-container *ngFor=\"let validation of validation_messages.confirm_password\">\n            <div class=\"error-message\" *ngIf=\"signupForm.get('matching_passwords').get('confirm_password').hasError(validation.type) && (signupForm.get('matching_passwords').get('confirm_password').dirty || signupForm.get('matching_passwords').get('confirm_password').touched)\">\n              <ion-icon name=\"information-circle-outline\"></ion-icon>\n              <span>{{ validation.message }}</span>\n            </div>\n          </ng-container>\n        </div>\n      </div>\n      <div class=\"error-container\">\n        <ng-container *ngFor=\"let validation of validation_messages.matching_passwords\">\n          <div class=\"error-message\" *ngIf=\"signupForm.get('matching_passwords').hasError(validation.type) && (signupForm.get('matching_passwords').get('confirm_password').dirty || signupForm.get('matching_passwords').get('confirm_password').touched)\">\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n            <span>{{ validation.message }}</span>\n          </div>\n        </ng-container>\n      </div>\n    </ion-list>\n\n    <ion-button class=\"signup-btn\" type=\"submit\" expand=\"block\" [disabled]=\"!signupForm.valid\">Sign Up</ion-button>\n    <div class=\"error-container\" *ngIf=\"submitError\">\n      <div class=\"error-message\">\n        <ion-icon name=\"information-circle-outline\"></ion-icon>\n        <span>{{ submitError }}</span>\n      </div>\n    </div>\n    <ion-row class=\"other-auth-options-row\">\n      <ion-button class=\"login-btn\" fill=\"clear\" (click)=\"signIn()\">\n        Already have an account?\n      </ion-button>\n    </ion-row>\n  </form>\n\n  <div class=\"social-auth-options\">\n    <p class=\"options-divider\">Or</p>\n    <ion-button class=\"social-auth-btn facebook-auth-btn\" expand=\"block\" color=\"facebook\" (click)=\"doFacebookSignup()\">Sign Up with Facebook</ion-button>\n    <ion-button class=\"social-auth-btn google-auth-btn\" expand=\"block\" color=\"google\" (click)=\"doGoogleSignup()\">Sign Up with Google</ion-button>\n    <ion-button class=\"social-auth-btn twitter-auth-btn\" expand=\"block\" color=\"twitter\" (click)=\"doTwitterSignup()\">Sign Up with Twitter</ion-button>\n  </div>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\nimport { FirebaseSignUpPage } from './firebase-sign-up.page';\nimport { ComponentsModule } from '../../../components/components.module';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FirebaseSignUpPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule\n  ],\n  declarations: [FirebaseSignUpPage]\n})\nexport class FirebaseSignUpPageModule {}\n","import { FormControl, FormGroup } from '@angular/forms';\n\nexport class PasswordValidator {\n\n  // If our validation fails, we return an object with a key for the error name and a value of true.\n  // Otherwise, if the validation passes, we simply return null because there is no error.\n\n  static areNotEqual(formGroup: FormGroup) {\n    let firstControlValue: any;\n    let valid = true;\n\n    for (const key in formGroup.controls) {\n      if (formGroup.controls.hasOwnProperty(key)) {\n        const control: FormControl = <FormControl>formGroup.controls[key];\n\n        if (firstControlValue === undefined) {\n          firstControlValue = control.value;\n        } else {\n          // check if the value of the first control is equal to the value of the second control\n          if (firstControlValue !== control.value) {\n            valid = false;\n            break;\n          }\n        }\n      }\n    }\n\n    if (valid) {\n      return null;\n    }\n\n    return {\n      areNotEqual: true\n    };\n  }\n}\n"],"sourceRoot":"webpack:///"}